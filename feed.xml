<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2019-12-17T03:53:32-06:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">fs22dk@lnu.se</title><subtitle>1DV022 Examination 1</subtitle><entry><title type="html">robots.txt &amp;amp; humans.txt</title><link href="http://0.0.0.0:4000/jekyll/update/2019/12/16/Robots_Humans.html" rel="alternate" type="text/html" title="robots.txt &amp; humans.txt" /><published>2019-12-16T10:02:30-06:00</published><updated>2019-12-16T10:02:30-06:00</updated><id>http://0.0.0.0:4000/jekyll/update/2019/12/16/Robots_Humans</id><content type="html" xml:base="http://0.0.0.0:4000/jekyll/update/2019/12/16/Robots_Humans.html">&lt;p&gt;En robots.txt är en del utav the robots exclusion protocol och är en webstandard som reglerar hur en sökmotor ges åtkomst till en webbsidas innehåll och är en textfil som anger vilka sidor som en sökmotor inte får eller får begära från en servern och utgår från följande standardformat:&lt;/p&gt;

&lt;p&gt;User-agent: 
Disallow:&lt;/p&gt;

&lt;p&gt;Den här sidans robots.txt är konfigurerad till att ge alla sökmotorer åtkomst till alla sidor utom /about och /contact.&lt;/p&gt;

&lt;p&gt;En humans.txt är inte del utav någon webstandard och har inte heller något konkret standardformat utan är bara ett initiativ för att besökare ska känna till vem eller vilka som ligger bakom en webbsidan. För den här sidans har jag valt att konfigurera humans.txt enligt följande:&lt;/p&gt;

&lt;p&gt;Name: 
Email: 
Location:&lt;/p&gt;

&lt;p&gt;EOF&lt;/p&gt;</content><author><name></name></author><summary type="html">En robots.txt är en del utav the robots exclusion protocol och är en webstandard som reglerar hur en sökmotor ges åtkomst till en webbsidas innehåll och är en textfil som anger vilka sidor som en sökmotor inte får eller får begära från en servern och utgår från följande standardformat:</summary></entry><entry><title type="html">css-preprocessors</title><link href="http://0.0.0.0:4000/jekyll/update/2019/12/16/CSS.html" rel="alternate" type="text/html" title="css-preprocessors" /><published>2019-12-16T10:02:30-06:00</published><updated>2019-12-16T10:02:30-06:00</updated><id>http://0.0.0.0:4000/jekyll/update/2019/12/16/CSS</id><content type="html" xml:base="http://0.0.0.0:4000/jekyll/update/2019/12/16/CSS.html">&lt;p&gt;En CSS-preprocessor är ett skriptspråk som utökar funktionaliteten i CSS som annars är obefintlig i vanlig CSS genom en uppsättning verktyg som kompilerar till traditionell CSS-syntax. Fördelaktigheten är att den ökar produktiviteten när utvecklaren ges möjligheten att återanvända befintlig CSS-kod genom att bland annat definiera variabler, skriva funktioner och länka samman olika CSS-filer genom importer vilket minskar antalet anrop till servern till skillnad från vanlig CSS som kräver ett anrop för varje CSS-fil i headern. Nackdelarna med CSS-preprocessors är att det tyvärr tar längre tid att kompilera och är betydligt svårare att felsöka. För den här sidan har jag skapat fem olika sass-filer: _site som tillhandhåller den generella designen för samtliga sidor, _header.scss för navigering, _footer.scss för footer och _syntax.scss för variabler samt importerat dessa i main.scss.&lt;/p&gt;

&lt;p&gt;EOF&lt;/p&gt;</content><author><name></name></author><summary type="html">En CSS-preprocessor är ett skriptspråk som utökar funktionaliteten i CSS som annars är obefintlig i vanlig CSS genom en uppsättning verktyg som kompilerar till traditionell CSS-syntax. Fördelaktigheten är att den ökar produktiviteten när utvecklaren ges möjligheten att återanvända befintlig CSS-kod genom att bland annat definiera variabler, skriva funktioner och länka samman olika CSS-filer genom importer vilket minskar antalet anrop till servern till skillnad från vanlig CSS som kräver ett anrop för varje CSS-fil i headern. Nackdelarna med CSS-preprocessors är att det tyvärr tar längre tid att kompilera och är betydligt svårare att felsöka. För den här sidan har jag skapat fem olika sass-filer: _site som tillhandhåller den generella designen för samtliga sidor, _header.scss för navigering, _footer.scss för footer och _syntax.scss för variabler samt importerat dessa i main.scss.</summary></entry><entry><title type="html">open graph</title><link href="http://0.0.0.0:4000/jekyll/update/2019/12/16/Open_graph.html" rel="alternate" type="text/html" title="open graph" /><published>2019-12-16T10:02:30-06:00</published><updated>2019-12-16T10:02:30-06:00</updated><id>http://0.0.0.0:4000/jekyll/update/2019/12/16/Open_graph</id><content type="html" xml:base="http://0.0.0.0:4000/jekyll/update/2019/12/16/Open_graph.html">&lt;p&gt;Open graph är ett verktyg som är skapat utav Facebook och gör det möjligt att integrera webbsidor i sociala medier som exempelvis Twitter, Facebook, LinkedIn och Google+ genom att göra websidor till graph-objekt med samma funktionalitet som facebook-objekt. För att göra en websida till ett graph-objekt behöver man implementera Open graphs meta-taggar:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;og:title&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;og:type&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;website&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;og:url&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;og:image&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/img/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ovanstående taggar har jag implementerat i _includes/open-graph.html och importerat filen i _/includes/head.html&lt;/p&gt;

&lt;p&gt;EOF&lt;/p&gt;</content><author><name></name></author><summary type="html">Open graph är ett verktyg som är skapat utav Facebook och gör det möjligt att integrera webbsidor i sociala medier som exempelvis Twitter, Facebook, LinkedIn och Google+ genom att göra websidor till graph-objekt med samma funktionalitet som facebook-objekt. För att göra en websida till ett graph-objekt behöver man implementera Open graphs meta-taggar:</summary></entry><entry><title type="html">disqus</title><link href="http://0.0.0.0:4000/jekyll/update/2019/12/16/Disqus.html" rel="alternate" type="text/html" title="disqus" /><published>2019-12-16T10:02:30-06:00</published><updated>2019-12-16T10:02:30-06:00</updated><id>http://0.0.0.0:4000/jekyll/update/2019/12/16/Disqus</id><content type="html" xml:base="http://0.0.0.0:4000/jekyll/update/2019/12/16/Disqus.html">&lt;p&gt;Att implementera Disqus-kommentarer var väldigt enkelt. Efter att ha registrerat ett Disqus-konto så kopierade jag implementeringskoden enligt guiden på disqus.com och klistrade in den i _includes/disqus-comments.html och visar upp funktionen längst ner i _layouts/post.html och aktiverade funktionen genom att ange inställningen comments: true.&lt;/p&gt;

&lt;p&gt;EOF&lt;/p&gt;</content><author><name></name></author><summary type="html">Att implementera Disqus-kommentarer var väldigt enkelt. Efter att ha registrerat ett Disqus-konto så kopierade jag implementeringskoden enligt guiden på disqus.com och klistrade in den i _includes/disqus-comments.html och visar upp funktionen längst ner i _layouts/post.html och aktiverade funktionen genom att ange inställningen comments: true.</summary></entry><entry><title type="html">jekyll &amp;amp; docker</title><link href="http://0.0.0.0:4000/jekyll/update/2019/12/16/Jekyll_Docker.html" rel="alternate" type="text/html" title="jekyll &amp; docker" /><published>2019-12-16T09:02:30-06:00</published><updated>2019-12-16T09:02:30-06:00</updated><id>http://0.0.0.0:4000/jekyll/update/2019/12/16/Jekyll_Docker</id><content type="html" xml:base="http://0.0.0.0:4000/jekyll/update/2019/12/16/Jekyll_Docker.html">&lt;p&gt;När jag började på projektet fick jag veta att Docker och i synnerhet Docker Compose inte har någon installationskandidat för Ubuntu 19.10 och att den template som jekyll-boilerplate.git genererar för Docker Compose inte har samma mappstruktur som visas i Jekylls dokumentation. Så istället för att installera Docker Compose, Jekyll och alla Ruby-gems på min maskin så skrev jag ett bash-skript som packar upp en tarball med en komplett mappstruktur och installerar Jekyll och alla Ruby-gems på Jekylls Dockeravbild direkt.&lt;/p&gt;

&lt;p&gt;Först laddade jag ner Docker med hjälp av wget eftersom Docker inte till Ubuntu 19.10 och installerade jag Docker. Mappstrukturen jag skapade och som packas upp i skriptet är inspirerat utav minimas mappstruktur och Dockeravbilden är Jekylls senaste officiella Builder image.&lt;/p&gt;

&lt;p&gt;För att installera och bygga projektet:&lt;/p&gt;

&lt;p&gt;./install.sh&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/install.png&quot; alt=&quot;install&quot; class=&quot;post-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;För att köra projektet lokalt i Docker:&lt;/p&gt;

&lt;p&gt;./run.sh&lt;/p&gt;

&lt;p&gt;Static-Site Generators som Jekyll kan vara lite kluriga att komma igång med men bygger man ett mindre projekt som exempelvis en dokumentation så är det ett fördelaktigt alternativ.&lt;/p&gt;

&lt;p&gt;EOF&lt;/p&gt;</content><author><name></name></author><summary type="html">När jag började på projektet fick jag veta att Docker och i synnerhet Docker Compose inte har någon installationskandidat för Ubuntu 19.10 och att den template som jekyll-boilerplate.git genererar för Docker Compose inte har samma mappstruktur som visas i Jekylls dokumentation. Så istället för att installera Docker Compose, Jekyll och alla Ruby-gems på min maskin så skrev jag ett bash-skript som packar upp en tarball med en komplett mappstruktur och installerar Jekyll och alla Ruby-gems på Jekylls Dockeravbild direkt.</summary></entry></feed>